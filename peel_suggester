#! /usr/bin/env python

from argparse import ArgumentParser

from models.peel_suggester import autoprocess


def main():

    ps = ArgumentParser(description="Find sources to peel using a "
                                    "file with models.", 
                        epilog="Like a crappy version of 'autoprocess' :)")

    help_ = {"f": "A skymodel format 1.0/1.1 file with a list of models.",
             "m": "MWA metafits file.",
             "t": "Threshold in Jy above which to suggest peeling. [Default 25]",
             "alpha": "Spectral index to assume if components/sources do not "
                      "have more than 1 flux density measurement. [Default -0.7]",
            }

    ps.add_argument("-f", "--aofile", "--models", "--skymodel", type=str,
                    help=help_["f"], dest="aofile", default=None, nargs="*")
    ps.add_argument("-m", "--metafits", type=str, help=help_["m"], default=None)
    ps.add_argument("-t", "--threshold", type=float, help=help_["t"], 
                    default=25.)
    ps.add_argument("-a", "--alpha", "--spectral_index", dest="alpha",
                    help=help_["alpha"], default=-0.7, type=float)
    ps.add_argument("-v", "--verbose", action="store_true")
    ps.add_argument("-D", "--duplicates", action="store_true")


    args = ps.parse_args()
    if args.aofile is None:
        raise ValueError("An aofile/skymodel must be supplied.")
    elif args.metafits is None:
        raise ValueError("An MWA metafits file must be supplied.")

    peel_sources = autoprocess(aofile=args.aofile, 
                               metafits=args.metafits, 
                               threshold=args.threshold, 
                               alpha=args.alpha,
                               verbose=args.verbose,
                               duplicates=args.duplicates)

    if peel_sources is not None:
        for source in peel_sources:
            if not args.verbose:
                print("{} {} {}".format(source[1], source[2], source[0]))


if __name__ == "__main__":
    main()